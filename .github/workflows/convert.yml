name: Convert TotalSegmentator Models

on:
  workflow_dispatch:
    inputs:
      model:
        description: 'Model to convert (all, body, lung_vessels, etc.)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - body
          - lung_vessels
          - cerebral_bleed
          - hip_implant
          - coronary_arteries
      precision:
        description: 'Model precision'
        required: true
        default: 'fp16'
        type: choice
        options:
          - fp16
          - fp32
      validate:
        description: 'Validate conversion'
        required: true
        default: true
        type: boolean

jobs:
  convert:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/devcontainers/python:3.9-bullseye
      options: --gpus all --shm-size 8gb
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python environment
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
        pip install -r requirements.txt
    
    - name: Create directories
      run: |
        mkdir -p models/pytorch models/coreml logs
    
    - name: Download models
      env:
        TOTALSEGMENTATOR_TOKEN: ${{ secrets.TOTALSEGMENTATOR_TOKEN }}
      run: |
        if [ -n "$TOTALSEGMENTATOR_TOKEN" ]; then
          python scripts/download_models.py --token $TOTALSEGMENTATOR_TOKEN
        else
          echo "Skipping model download - no token provided"
          # Create dummy models for testing
          python scripts/create_dummy_models.py
        fi
    
    - name: Convert models
      run: |
        if [ "${{ github.event.inputs.model }}" = "all" ]; then
          python convert_totalsegmentator.py --all \
            --precision ${{ github.event.inputs.precision }} \
            ${{ github.event.inputs.validate && '--validate' || '--no-validate' }} \
            --cpu-only
        else
          python convert_totalsegmentator.py \
            --model ${{ github.event.inputs.model }} \
            --precision ${{ github.event.inputs.precision }} \
            ${{ github.event.inputs.validate && '--validate' || '--no-validate' }} \
            --cpu-only
        fi
    
    - name: Upload CoreML models
      uses: actions/upload-artifact@v4
      with:
        name: coreml-models-${{ github.event.inputs.precision }}
        path: models/coreml/*.mlpackage
        retention-days: 30
    
    - name: Upload conversion logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: conversion-logs
        path: logs/
        retention-days: 7
    
    - name: Upload validation reports
      if: github.event.inputs.validate == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: validation-reports
        path: validation_reports/
        retention-days: 30

  test-ios-integration:
    needs: convert
    runs-on: macos-latest
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download CoreML models
      uses: actions/download-artifact@v4
      with:
        name: coreml-models-${{ github.event.inputs.precision }}
        path: models/coreml
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Test iOS integration
      run: |
        cd examples/ios_integration
        xcodebuild test \
          -scheme TotalSegmentatorDemo \
          -destination 'platform=iOS Simulator,name=iPhone 14' \
          -quiet
    
    - name: Build iOS demo app
      run: |
        cd examples/ios_integration
        xcodebuild archive \
          -scheme TotalSegmentatorDemo \
          -archivePath build/TotalSegmentatorDemo.xcarchive \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -quiet